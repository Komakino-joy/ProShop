{"ast":null,"code":"import OrderActionTypes from './order.types';\nimport axios from 'axios';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: OrderActionTypes.ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, config);\n    dispatch({\n      type: OrderActionTypes.ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: OrderActionTypes.ORDER_CREATE_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n\n  ;\n};","map":{"version":3,"sources":["C:/Users/alvar/Documents/1.Web Development Projects/FINAL_COPIES_OF_PROJECTS/MERN-E-Commerce/ProShop/frontend/mus-shop/src/redux/order/order.actions.js"],"names":["OrderActionTypes","axios","createOrder","order","dispatch","getState","type","ORDER_CREATE_REQUEST","userLogin","userInfo","config","headers","Authorization","token","data","post","ORDER_CREATE_SUCCESS","payload","error","ORDER_CREATE_FAILURE","response","message"],"mappings":"AAAA,OAAOA,gBAAP,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAChE,MAAI;AACAD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEN,gBAAgB,CAACO;AADlB,KAAD,CAAR;AAIA,UAAM;AAAEC,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AAAb,QAA8BJ,QAAQ,EAA5C;AAEA,UAAMK,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAELC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFnC;AADE,KAAf;AAOA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMb,KAAK,CAACc,IAAN,CAClB,aADkB,EAEnBZ,KAFmB,EAGnBO,MAHmB,CAAvB;AAMAN,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEN,gBAAgB,CAACgB,oBADlB;AAELC,MAAAA,OAAO,EAAEH;AAFJ,KAAD,CAAR;AAKH,GAzBD,CAyBE,OAAOI,KAAP,EAAc;AACZd,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEN,gBAAgB,CAACmB,oBADlB;AAELF,MAAAA,OAAO,EAAEC,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBO,OAAtC,GACPH,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBO,OADb,GAEPH,KAAK,CAACG;AAJH,KAAD,CAAR;AAMH;;AAAA;AACJ,CAlCM","sourcesContent":["import OrderActionTypes from './order.types';\r\nimport axios from 'axios';\r\n\r\nexport const createOrder = (order) => async (dispatch ,getState) => {\r\n    try {\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders`, \r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_CREATE_FAILURE,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message\r\n            : error.message,\r\n        });\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}