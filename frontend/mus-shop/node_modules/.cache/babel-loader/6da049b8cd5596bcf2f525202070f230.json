{"ast":null,"code":"import{createStore,applyMiddleware}from'redux';import thunk from'redux-thunk';import{composeWithDevTools}from'redux-devtools-extension';import rootReducer from'./root.reducer';var cartItemsFromStorage=localStorage.getItem('cartItems')?JSON.parse(localStorage.getItem('cartItems')):[];var userInfoFromStorage=localStorage.getItem('userInfo')?JSON.parse(localStorage.getItem('userInfo')):null;var shippingAddressFromStorage=localStorage.getItem('shippingAddress')?JSON.parse(localStorage.getItem('shippingAddress')):{};var paymentMethodFromStorage=localStorage.getItem('paymentMethod')?JSON.parse(localStorage.getItem('paymentMethod')):{};var initialState={cart:{cartItems:cartItemsFromStorage,shippingAddress:shippingAddressFromStorage,paymentMethodFromStorage:paymentMethodFromStorage},userLogin:{userInfo:userInfoFromStorage}};var middleware=[thunk];var store=createStore(rootReducer,initialState,composeWithDevTools(applyMiddleware.apply(void 0,middleware)));export default store;","map":{"version":3,"sources":["C:/Users/alvar/Documents/a_Web_Development_Projects/FINAL_COPIES_OF_PROJECTS/MERN_E_Commerce/ProShop/frontend/mus-shop/src/redux/store.js"],"names":["createStore","applyMiddleware","thunk","composeWithDevTools","rootReducer","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","paymentMethodFromStorage","initialState","cart","cartItems","shippingAddress","userLogin","userInfo","middleware","store"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,KAA6C,OAA7C,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,mBAAT,KAAoC,0BAApC,CAEA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CAEA,GAAMC,CAAAA,oBAAoB,CAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,EAC3BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAD2B,CAE3B,EAFF,CAIA,GAAMG,CAAAA,mBAAmB,CAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,EAC1BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD0B,CAE1B,IAFF,CAIA,GAAMI,CAAAA,0BAA0B,CAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,EACjCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADiC,CAEjC,EAFF,CAIA,GAAMK,CAAAA,wBAAwB,CAAGN,YAAY,CAACC,OAAb,CAAqB,eAArB,EAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAX,CAD+B,CAE/B,EAFF,CAMA,GAAMM,CAAAA,YAAY,CAAG,CACjBC,IAAI,CAAE,CACFC,SAAS,CAAEV,oBADT,CAEFW,eAAe,CAAEL,0BAFf,CAGFC,wBAAwB,CAACA,wBAHvB,CADW,CAMjBK,SAAS,CAAE,CAAEC,QAAQ,CAAER,mBAAZ,CANM,CAArB,CAUA,GAAMS,CAAAA,UAAU,CAAG,CAACjB,KAAD,CAAnB,CAEA,GAAMkB,CAAAA,KAAK,CAAGpB,WAAW,CAACI,WAAD,CAAcS,YAAd,CACrBV,mBAAmB,CAACF,eAAe,MAAf,QAAmBkB,UAAnB,CAAD,CADE,CAAzB,CAGA,cAAeC,CAAAA,KAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport rootReducer from './root.reducer';\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') \r\n? JSON.parse(localStorage.getItem('cartItems')) \r\n: []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n? JSON.parse(localStorage.getItem('userInfo')) \r\n: null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n? JSON.parse(localStorage.getItem('shippingAddress'))\r\n: {}\r\n\r\nconst paymentMethodFromStorage = localStorage.getItem('paymentMethod')\r\n? JSON.parse(localStorage.getItem('paymentMethod'))\r\n: {}\r\n\r\n\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n        paymentMethodFromStorage:paymentMethodFromStorage\r\n     },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n     \r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}