{"ast":null,"code":"import _slicedToArray from\"C:/Users/alvar/Documents/a_Web_Development_Projects/FINAL_COPIES_OF_PROJECTS/MERN_E_Commerce/ProShop/frontend/mus-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Form,Button,Col}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import FormContainer from'../../components/form-container/form-container';import CheckoutSteps from'../../components/checkout-steps/checkout-steps.component';import{savePaymentMethod}from'../../redux/cart/cart.actions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PaymentMethodPage=function PaymentMethodPage(_ref){var history=_ref.history;var dispatch=useDispatch();var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;if(!shippingAddress){history.push('/shipping');};var _useState=useState('PayPal'),_useState2=_slicedToArray(_useState,2),paymentMethod=_useState2[0],setPaymentMethod=_useState2[1];var submitHandler=function submitHandler(e){e.preventDefault();dispatch(savePaymentMethod(paymentMethod));history.push('/placeorder');};return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true,step3:true}),/*#__PURE__*/_jsx(\"h1\",{children:\"Payment Method\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{as:\"legend\",children:\"Select Method\"}),/*#__PURE__*/_jsxs(Col,{children:[/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",label:\"PayPal or Credit Card\",id:\"PayPal\",name:\"paymentMethod\",value:\"PayPal\",checked:true,onChange:function onChange(e){return setPaymentMethod(e.target.value);}}),/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",label:\"Stripe\",id:\"Stripe\",name:\"paymentMethod\",value:\"Stripe\",onChange:function onChange(e){return setPaymentMethod(e.target.value);}})]})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",className:\"my-3\",children:\"Continue\"})]})]});};export default PaymentMethodPage;","map":{"version":3,"sources":["C:/Users/alvar/Documents/a_Web_Development_Projects/FINAL_COPIES_OF_PROJECTS/MERN_E_Commerce/ProShop/frontend/mus-shop/src/pages/payment-method/payment-method.component.jsx"],"names":["React","useState","Form","Button","Col","useDispatch","useSelector","FormContainer","CheckoutSteps","savePaymentMethod","PaymentMethodPage","history","dispatch","cart","state","shippingAddress","push","paymentMethod","setPaymentMethod","submitHandler","e","preventDefault","target","value"],"mappings":"6OAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,IAAT,CAAeC,MAAf,CAAuBC,GAAvB,KAAkC,iBAAlC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,aAAP,KAA0B,gDAA1B,CAEA,MAAOC,CAAAA,aAAP,KAA0B,0DAA1B,CAEA,OAASC,iBAAT,KAAkC,+BAAlC,C,wFAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CACvC,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CAEA,GAAMQ,CAAAA,IAAI,CAAGP,WAAW,CAAC,SAAAQ,KAAK,QAAIA,CAAAA,KAAK,CAACD,IAAV,EAAN,CAAxB,CACA,GAAQE,CAAAA,eAAR,CAA4BF,IAA5B,CAAQE,eAAR,CAEA,GAAG,CAACA,eAAJ,CAAqB,CACjBJ,OAAO,CAACK,IAAR,CAAa,WAAb,EACH,EAED,cAA0Cf,QAAQ,CAAC,QAAD,CAAlD,wCAAOgB,aAAP,eAAsBC,gBAAtB,eAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAO,CACzBA,CAAC,CAACC,cAAF,GACAT,QAAQ,CAACH,iBAAiB,CAACQ,aAAD,CAAlB,CAAR,CACAN,OAAO,CAACK,IAAR,CAAa,aAAb,EACH,CAJD,CAMA,mBACI,MAAC,aAAD,yBACA,KAAC,aAAD,EAAe,KAAK,KAApB,CAAqB,KAAK,KAA1B,CAA2B,KAAK,KAAhC,EADA,cAEI,sCAFJ,cAGI,MAAC,IAAD,EAAM,QAAQ,CAAEG,aAAhB,wBACI,MAAC,IAAD,CAAM,KAAN,yBACI,KAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAC,QAAf,2BADJ,cAIA,MAAC,GAAD,yBACI,KAAC,IAAD,CAAM,KAAN,EACI,IAAI,CAAC,OADT,CAEI,KAAK,CAAC,uBAFV,CAGI,EAAE,CAAC,QAHP,CAII,IAAI,CAAC,eAJT,CAKI,KAAK,CAAC,QALV,CAMI,OAAO,KANX,CAOI,QAAQ,CAAE,kBAACC,CAAD,QAAOF,CAAAA,gBAAgB,CAACE,CAAC,CAACE,MAAF,CAASC,KAAV,CAAvB,EAPd,EADJ,cAUI,KAAC,IAAD,CAAM,KAAN,EACI,IAAI,CAAC,OADT,CAEI,KAAK,CAAC,QAFV,CAGI,EAAE,CAAC,QAHP,CAII,IAAI,CAAC,eAJT,CAKI,KAAK,CAAC,QALV,CAMI,QAAQ,CAAE,kBAACH,CAAD,QAAOF,CAAAA,gBAAgB,CAACE,CAAC,CAACE,MAAF,CAASC,KAAV,CAAvB,EANd,EAVJ,GAJA,GADJ,cA0BI,KAAC,MAAD,EACI,IAAI,CAAC,QADT,CAEI,OAAO,CAAC,SAFZ,CAGI,SAAS,CAAC,MAHd,sBA1BJ,GAHJ,GADJ,CAsCH,CAxDD,CA0DA,cAAeb,CAAAA,iBAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../../components/form-container/form-container';\r\n\r\nimport CheckoutSteps from '../../components/checkout-steps/checkout-steps.component'\r\n\r\nimport { savePaymentMethod } from '../../redux/cart/cart.actions';\r\n\r\nconst PaymentMethodPage = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const { shippingAddress } = cart;\r\n\r\n    if(!shippingAddress) {\r\n        history.push('/shipping');\r\n    };\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal');\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(savePaymentMethod(paymentMethod));\r\n        history.push('/placeorder');\r\n    };\r\n\r\n    return (\r\n        <FormContainer>\r\n        <CheckoutSteps step1 step2 step3/>\r\n            <h1>Payment Method</h1> \r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                \r\n\r\n                <Col>\r\n                    <Form.Check \r\n                        type='radio' \r\n                        label='PayPal or Credit Card' \r\n                        id='PayPal'\r\n                        name='paymentMethod'\r\n                        value='PayPal'\r\n                        checked\r\n                        onChange={(e) => setPaymentMethod(e.target.value)}\r\n                    />\r\n                    <Form.Check \r\n                        type='radio' \r\n                        label='Stripe' \r\n                        id='Stripe'\r\n                        name='paymentMethod'\r\n                        value='Stripe'\r\n                        onChange={(e) => setPaymentMethod(e.target.value)}\r\n                    />\r\n                </Col>\r\n\r\n                </Form.Group>\r\n                <Button \r\n                    type='submit' \r\n                    variant='primary'\r\n                    className='my-3'\r\n                >Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default PaymentMethodPage\r\n"]},"metadata":{},"sourceType":"module"}