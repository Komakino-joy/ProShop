{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alvar\\\\Documents\\\\MERN-E-Commerce\\\\ProShop\\\\frontend\\\\mus-shop\\\\src\\\\pages\\\\cart-page\\\\cart-page.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\nimport Message from '../../components/message/message.component';\nimport { addToCart } from '../../redux/cart/cart.actions.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cartpage = ({\n  match,\n  location,\n  history\n}) => {\n  _s();\n\n  const productId = match.params.productId;\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 8,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Shopping Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n        children: [\"Your cart is empty \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Go back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n        variant: \"flush\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Cartpage, \"1b/6BcrzFg90k2qO1tRu8krUc0E=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Cartpage;\nexport default Cartpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cartpage\");","map":{"version":3,"sources":["C:/Users/alvar/Documents/MERN-E-Commerce/ProShop/frontend/mus-shop/src/pages/cart-page/cart-page.jsx"],"names":["React","useEffect","Link","useDispatch","useSelector","Row","Col","ListGroup","Image","Form","Button","Card","Message","addToCart","Cartpage","match","location","history","productId","params","qty","search","Number","split","dispatch","cart","state","cartItems","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,EAA8BC,KAA9B,EAAqCC,IAArC,EAA2CC,MAA3C,EAAmDC,IAAnD,QAA+D,iBAA/D;AACA,OAAOC,OAAP,MAAoB,4CAApB;AACA,SAASC,SAAT,QAA0B,kCAA1B;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAD,KAAkC;AAAA;;AAC/C,QAAMC,SAAS,GAAGH,KAAK,CAACI,MAAN,CAAaD,SAA/B;AAEA,QAAME,GAAG,GAAGJ,QAAQ,CAACK,MAAT,GAAkBC,MAAM,CAACN,QAAQ,CAACK,MAAT,CAAgBE,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAD,CAAxB,GAA0D,CAAtE;AAEA,QAAMC,QAAQ,GAAGrB,WAAW,EAA5B;AAEA,QAAMsB,IAAI,GAAGrB,WAAW,CAACsB,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAgBF,IAAtB;AAEAxB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGiB,SAAH,EAAc;AACVM,MAAAA,QAAQ,CAACX,SAAS,CAACK,SAAD,EAAYE,GAAZ,CAAV,CAAR;AACH;AACJ,GAJQ,EAIN,CAACI,QAAD,EAAWN,SAAX,EAAsBE,GAAtB,CAJM,CAAT;AAMA,sBACI,QAAC,GAAD;AAAA,4BAEI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKO,SAAS,CAACC,MAAV,KAAqB,CAArB,gBACD,QAAC,OAAD;AAAA,uDAA4B,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,cADC,gBAGG,QAAC,SAAD;AAAW,QAAA,OAAO,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,cALR;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAYI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAT;AAAA;AAAA;AAAA;AAAA,YAZJ,eAgBI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAG;AAAV;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CAvCD;;GAAMd,Q;UAKeX,W,EAEJC,W;;;KAPXU,Q;AAyCN,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\r\nimport Message from '../../components/message/message.component';\r\nimport { addToCart } from '../../redux/cart/cart.actions.js';\r\n\r\nconst Cartpage = ({ match, location, history }) => {\r\n    const productId = match.params.productId;\r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n    useEffect(() => {\r\n        if(productId) {\r\n            dispatch(addToCart(productId, qty));\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    return (\r\n        <Row>\r\n            \r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? \r\n                <Message>Your cart is empty <Link to='/'>Go back</Link></Message> \r\n                : (\r\n                    <ListGroup variant='flush'></ListGroup>\r\n                )\r\n                }\r\n            </Col>\r\n\r\n            <Col md={2}>\r\n\r\n            </Col>\r\n\r\n            <Col md ={2}>\r\n\r\n            </Col>\r\n\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default Cartpage;\r\n"]},"metadata":{},"sourceType":"module"}