{"ast":null,"code":"import axios from 'axios';\nimport UserActionTypes from './user.types';\nimport OrderActionTypes from '../order/order.types';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: UserActionTypes.USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: UserActionTypes.USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: UserActionTypes.USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n\n  ;\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: UserActionTypes.USER_LOG_OUT\n  });\n  dispatch({\n    type: UserActionTypes.USER_DETAILS_RESET\n  });\n  dispatch({\n    type: OrderActionTypes.ORDER_LIST_MY_RESET\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: UserActionTypes.USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: UserActionTypes.USER_REGISTER_SUCCESS,\n      payload: data\n    }); // Login after registration\n\n    dispatch({\n      type: UserActionTypes.USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: UserActionTypes.USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n\n  ;\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: UserActionTypes.USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: UserActionTypes.USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: UserActionTypes.USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n\n  ;\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: UserActionTypes.USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, config);\n    dispatch({\n      type: UserActionTypes.USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: UserActionTypes.USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n\n  ;\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: UserActionTypes.USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users`, config);\n    dispatch({\n      type: UserActionTypes.USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: UserActionTypes.USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n\n  ;\n};","map":{"version":3,"sources":["C:/Users/alvar/Documents/1.Web Development Projects/FINAL_COPIES_OF_PROJECTS/MERN-E-Commerce/ProShop/frontend/mus-shop/src/redux/user/user.actions.js"],"names":["axios","UserActionTypes","OrderActionTypes","login","email","password","dispatch","type","USER_LOGIN_REQUEST","config","headers","data","post","USER_LOGIN_SUCCESS","payload","localStorage","setItem","JSON","stringify","error","USER_LOGIN_FAIL","response","message","logout","removeItem","USER_LOG_OUT","USER_DETAILS_RESET","ORDER_LIST_MY_RESET","register","name","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","getUserDetails","id","getState","USER_DETAILS_REQUEST","userLogin","userInfo","Authorization","token","get","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","updateUserProfile","user","USER_UPDATE_PROFILE_REQUEST","put","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","listUsers","USER_LIST_REQUEST","USER_LIST_SUCCESS"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport UserActionTypes from './user.types';\r\nimport OrderActionTypes from '../order/order.types'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: UserActionTypes.USER_LOGIN_REQUEST,\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login', \r\n            { email, password }, \r\n            config\r\n        );\r\n\r\n        dispatch({\r\n            type: UserActionTypes.USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UserActionTypes.USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message\r\n            : error.message,\r\n        });\r\n    };\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: UserActionTypes.USER_LOG_OUT });\r\n    dispatch({ type: UserActionTypes.USER_DETAILS_RESET });\r\n    dispatch({ type: OrderActionTypes.ORDER_LIST_MY_RESET });\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: UserActionTypes.USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/', \r\n            { name, email, password }, \r\n            config\r\n        );\r\n\r\n        dispatch({\r\n            type: UserActionTypes.USER_REGISTER_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n        // Login after registration\r\n        dispatch({\r\n            type: UserActionTypes.USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UserActionTypes.USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message\r\n            : error.message,\r\n        });\r\n    };\r\n};\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch ,getState) => {\r\n    try {\r\n        dispatch({\r\n            type: UserActionTypes.USER_DETAILS_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}`, \r\n            config\r\n        );\r\n\r\n        dispatch({\r\n            type: UserActionTypes.USER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UserActionTypes.USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message\r\n            : error.message,\r\n        });\r\n    };\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch ,getState) => {\r\n    try {\r\n        dispatch({\r\n            type: UserActionTypes.USER_UPDATE_PROFILE_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile`, \r\n            user,\r\n            config\r\n        );\r\n\r\n        dispatch({\r\n            type: UserActionTypes.USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UserActionTypes.USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message\r\n            : error.message,\r\n        });\r\n    };\r\n};\r\n\r\nexport const listUsers = () => async (dispatch ,getState) => {\r\n    try {\r\n        dispatch({\r\n            type: UserActionTypes.USER_LIST_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.get( `/api/users`, config);\r\n\r\n        dispatch({\r\n            type: UserActionTypes.USER_LIST_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UserActionTypes.USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message\r\n            : error.message,\r\n        });\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}