{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './root.reducer';\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst paymentMethodFromStorage = localStorage.getItem('paymentMethod') ? JSON.parse(localStorage.getItem('paymentMethod')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n    paymentMethodFromStorage: paymentMethodFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/alvar/Documents/1.Web Development Projects/FINAL_COPIES_OF_PROJECTS/MERN-E-Commerce/ProShop/frontend/mus-shop/src/redux/store.js"],"names":["createStore","applyMiddleware","thunk","composeWithDevTools","rootReducer","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","paymentMethodFromStorage","initialState","cart","cartItems","shippingAddress","userLogin","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAC3BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAD2B,GAE3B,EAFF;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAC1BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD0B,GAE1B,IAFF;AAIA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACjCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADiC,GAEjC,EAFF;AAIA,MAAMK,wBAAwB,GAAGN,YAAY,CAACC,OAAb,CAAqB,eAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAX,CAD+B,GAE/B,EAFF;AAMA,MAAMM,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,SAAS,EAAEV,oBADT;AAEFW,IAAAA,eAAe,EAAEL,0BAFf;AAGFC,IAAAA,wBAAwB,EAACA;AAHvB,GADW;AAMjBK,EAAAA,SAAS,EAAE;AAAEC,IAAAA,QAAQ,EAAER;AAAZ;AANM,CAArB;AAUA,MAAMS,UAAU,GAAG,CAACjB,KAAD,CAAnB;AAEA,MAAMkB,KAAK,GAAGpB,WAAW,CAACI,WAAD,EAAcS,YAAd,EACrBV,mBAAmB,CAACF,eAAe,CAAC,GAAGkB,UAAJ,CAAhB,CADE,CAAzB;AAGA,eAAeC,KAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport rootReducer from './root.reducer';\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') \r\n? JSON.parse(localStorage.getItem('cartItems')) \r\n: []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n? JSON.parse(localStorage.getItem('userInfo')) \r\n: null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n? JSON.parse(localStorage.getItem('shippingAddress'))\r\n: {}\r\n\r\nconst paymentMethodFromStorage = localStorage.getItem('paymentMethod')\r\n? JSON.parse(localStorage.getItem('paymentMethod'))\r\n: {}\r\n\r\n\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n        paymentMethodFromStorage:paymentMethodFromStorage\r\n     },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n     \r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}