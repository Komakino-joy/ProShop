{"ast":null,"code":"import OrderActionTypes from './order.types';\nimport axios from 'axios';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: OrderActionTypes.ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, config);\n    dispatch({\n      type: OrderActionTypes.ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: OrderActionTypes.ORDER_CREATE_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n\n  ;\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: OrderActionTypes.ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: OrderActionTypes.ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: OrderActionTypes.ORDER_DETAILS_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n\n  ;\n};\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: OrderActionTypes.ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: OrderActionTypes.ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: OrderActionTypes.ORDER_PAY_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n\n  ;\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: OrderActionTypes.ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/myorders`, config);\n    dispatch({\n      type: OrderActionTypes.ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: OrderActionTypes.ORDER_LIST_MY_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n\n  ;\n};\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: OrderActionTypes.ORDER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders`, config);\n    dispatch({\n      type: OrderActionTypes.ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: OrderActionTypes.ORDER_LIST_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n\n  ;\n};","map":{"version":3,"sources":["C:/Users/alvar/Documents/1.Web Development Projects/FINAL_COPIES_OF_PROJECTS/MERN-E-Commerce/ProShop/frontend/mus-shop/src/redux/order/order.actions.js"],"names":["OrderActionTypes","axios","createOrder","order","dispatch","getState","type","ORDER_CREATE_REQUEST","userLogin","userInfo","config","headers","Authorization","token","data","post","ORDER_CREATE_SUCCESS","payload","error","ORDER_CREATE_FAILURE","response","message","getOrderDetails","id","ORDER_DETAILS_REQUEST","get","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAILURE","payOrder","orderId","paymentResult","ORDER_PAY_REQUEST","put","ORDER_PAY_SUCCESS","ORDER_PAY_FAILURE","listMyOrders","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAILURE","listOrders","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAILURE"],"mappings":"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","sourcesContent":["import OrderActionTypes from './order.types';\r\nimport axios from 'axios';\r\n\r\nexport const createOrder = (order) => async (dispatch ,getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_CREATE_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders`, \r\n            order,\r\n            config\r\n        );\r\n\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_CREATE_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_CREATE_FAILURE,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message\r\n            : error.message,\r\n        });\r\n    };\r\n};\r\n\r\nexport const getOrderDetails = (id) => async (dispatch ,getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_DETAILS_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_DETAILS_FAILURE,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message\r\n            : error.message,\r\n        });\r\n    };\r\n};\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch ,getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_PAY_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`,paymentResult, config);\r\n\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_PAY_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_PAY_FAILURE,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message\r\n            : error.message,\r\n        });\r\n    };\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch ,getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_LIST_MY_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_LIST_MY_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_LIST_MY_FAILURE,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message\r\n            : error.message,\r\n        });\r\n    };\r\n};\r\n\r\nexport const listOrders = () => async (dispatch ,getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_LIST_REQUEST\r\n        });\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/orders`, config);\r\n\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_LIST_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: OrderActionTypes.ORDER_LIST_FAILURE,\r\n            payload: error.response && error.response.data.message \r\n            ? error.response.data.message\r\n            : error.message,\r\n        });\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}