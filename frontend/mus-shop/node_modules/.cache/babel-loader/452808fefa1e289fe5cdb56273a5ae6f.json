{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './root.reducer';\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('cartItems')) : null;\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/alvar/Documents/MERN-E-Commerce/ProShop/frontend/mus-shop/src/redux/store.js"],"names":["createStore","applyMiddleware","thunk","composeWithDevTools","rootReducer","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","cart","cartItems","userLogin","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAC3BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAD2B,GAE3B,EAFF;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAC1BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAD0B,GAE1B,IAFF;AAIA,MAAMI,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AAACC,IAAAA,SAAS,EAAER;AAAZ,GADW;AAEjBS,EAAAA,SAAS,EAAE;AAAEC,IAAAA,QAAQ,EAAEL;AAAZ;AAFM,CAArB;AAKA,MAAMM,UAAU,GAAG,CAACd,KAAD,CAAnB;AAEA,MAAMe,KAAK,GAAGjB,WAAW,CAACI,WAAD,EAAcO,YAAd,EACrBR,mBAAmB,CAACF,eAAe,CAAC,GAAGe,UAAJ,CAAhB,CADE,CAAzB;AAGA,eAAeC,KAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport rootReducer from './root.reducer';\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') \r\n? JSON.parse(localStorage.getItem('cartItems')) \r\n: []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n? JSON.parse(localStorage.getItem('cartItems')) \r\n: null\r\n\r\nconst initialState = {\r\n    cart: {cartItems: cartItemsFromStorage },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}